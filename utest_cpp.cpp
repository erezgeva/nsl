/* SPDX-License-Identifier: GPL-3.0-or-later
   SPDX-FileCopyrightText: Copyright 2022 Erez Geva */

#include <gtest/gtest.h>
#include "nsl_statistics.h"

TEST(nslCppTest, stat)
{
    nsl_stats s;
    EXPECT_EQ(s.get_num_elems(), 0);
    EXPECT_EQ(s.get_min(), 0x7FFFFFFFFFFFFFFFLL);
    EXPECT_EQ(s.get_max(), -0x8000000000000000LL);
    EXPECT_EQ(s.get_mean(), 0);
    EXPECT_DOUBLE_EQ(s.get_sq(), 0);
    EXPECT_DOUBLE_EQ(s.get_sd(), 0);
    s.add_elem(10);
    EXPECT_EQ(s.get_num_elems(), 1);
    EXPECT_EQ(s.get_min(), 10);
    EXPECT_EQ(s.get_max(), 10);
    EXPECT_EQ(s.get_mean(), 10);
    EXPECT_DOUBLE_EQ(s.get_sq(), 100);
    EXPECT_TRUE(std::isnan(s.get_sd()));
    s.add_elem(20);
    EXPECT_EQ(s.get_num_elems(), 2);
    EXPECT_EQ(s.get_min(), 10);
    EXPECT_EQ(s.get_max(), 20);
    EXPECT_EQ(s.get_mean(), 15);
    EXPECT_DOUBLE_EQ(s.get_sq(), 250);
    EXPECT_DOUBLE_EQ(s.get_sd(), 7.0710678118654755);
    s.add_elem(30);
    EXPECT_EQ(s.get_num_elems(), 3);
    EXPECT_EQ(s.get_min(), 10);
    EXPECT_EQ(s.get_max(), 30);
    EXPECT_EQ(s.get_mean(), 20);
    EXPECT_DOUBLE_EQ(s.get_sq(), 466.66666666666669);
    EXPECT_DOUBLE_EQ(s.get_sd(), 10);
}
TEST(nslCppTest, vec)
{
    nsl_vec_stats v(10,5,10);
    EXPECT_EQ(v.get_start(), 10);
    EXPECT_EQ(v.get_end(), 60);
    EXPECT_EQ(v.get_step(), 10);
    EXPECT_EQ(v.get_size(), 5);
    // add elements
    EXPECT_EQ(v.get_below(), 0);
    EXPECT_EQ(v.get_above(), 0);
    EXPECT_EQ(v.get_value(0), 0);
    EXPECT_EQ(v.get_value(10), 0);
    EXPECT_EQ(v.get_value(20), 0);
    EXPECT_EQ(v.get_value(30), 0);
    EXPECT_EQ(v.get_value(40), 0);
    EXPECT_EQ(v.get_value(50), 0);
    EXPECT_EQ(v.get_value(60), 0);
    v.add_elem(9);
    EXPECT_EQ(v.get_below(), 1);
    EXPECT_EQ(v.get_above(), 0);
    EXPECT_EQ(v.get_value(0), 1);
    EXPECT_EQ(v.get_value(10), 0);
    EXPECT_EQ(v.get_value(20), 0);
    EXPECT_EQ(v.get_value(30), 0);
    EXPECT_EQ(v.get_value(40), 0);
    EXPECT_EQ(v.get_value(50), 0);
    EXPECT_EQ(v.get_value(60), 0);
    v.add_elem(10);
    EXPECT_EQ(v.get_below(), 1);
    EXPECT_EQ(v.get_above(), 0);
    EXPECT_EQ(v.get_value(0), 1);
    EXPECT_EQ(v.get_value(10), 1);
    EXPECT_EQ(v.get_value(20), 0);
    EXPECT_EQ(v.get_value(30), 0);
    EXPECT_EQ(v.get_value(40), 0);
    EXPECT_EQ(v.get_value(50), 0);
    EXPECT_EQ(v.get_value(60), 0);
    v.add_elem(19);
    EXPECT_EQ(v.get_below(), 1);
    EXPECT_EQ(v.get_above(), 0);
    EXPECT_EQ(v.get_value(0), 1);
    EXPECT_EQ(v.get_value(10), 2);
    EXPECT_EQ(v.get_value(20), 0);
    EXPECT_EQ(v.get_value(30), 0);
    EXPECT_EQ(v.get_value(40), 0);
    EXPECT_EQ(v.get_value(50), 0);
    EXPECT_EQ(v.get_value(60), 0);
    v.add_elem(20);
    EXPECT_EQ(v.get_below(), 1);
    EXPECT_EQ(v.get_above(), 0);
    EXPECT_EQ(v.get_value(0), 1);
    EXPECT_EQ(v.get_value(10), 2);
    EXPECT_EQ(v.get_value(20), 1);
    EXPECT_EQ(v.get_value(30), 0);
    EXPECT_EQ(v.get_value(40), 0);
    EXPECT_EQ(v.get_value(50), 0);
    EXPECT_EQ(v.get_value(60), 0);
    v.add_elem(29);
    EXPECT_EQ(v.get_below(), 1);
    EXPECT_EQ(v.get_above(), 0);
    EXPECT_EQ(v.get_value(0), 1);
    EXPECT_EQ(v.get_value(10), 2);
    EXPECT_EQ(v.get_value(20), 2);
    EXPECT_EQ(v.get_value(30), 0);
    EXPECT_EQ(v.get_value(40), 0);
    EXPECT_EQ(v.get_value(50), 0);
    EXPECT_EQ(v.get_value(60), 0);
    v.add_elem(30);
    EXPECT_EQ(v.get_below(), 1);
    EXPECT_EQ(v.get_above(), 0);
    EXPECT_EQ(v.get_value(0), 1);
    EXPECT_EQ(v.get_value(10), 2);
    EXPECT_EQ(v.get_value(20), 2);
    EXPECT_EQ(v.get_value(30), 1);
    EXPECT_EQ(v.get_value(40), 0);
    EXPECT_EQ(v.get_value(50), 0);
    EXPECT_EQ(v.get_value(60), 0);
    v.add_elem(39);
    EXPECT_EQ(v.get_below(), 1);
    EXPECT_EQ(v.get_above(), 0);
    EXPECT_EQ(v.get_value(0), 1);
    EXPECT_EQ(v.get_value(10), 2);
    EXPECT_EQ(v.get_value(20), 2);
    EXPECT_EQ(v.get_value(30), 2);
    EXPECT_EQ(v.get_value(40), 0);
    EXPECT_EQ(v.get_value(50), 0);
    EXPECT_EQ(v.get_value(60), 0);
    v.add_elem(40);
    EXPECT_EQ(v.get_below(), 1);
    EXPECT_EQ(v.get_above(), 0);
    EXPECT_EQ(v.get_value(0), 1);
    EXPECT_EQ(v.get_value(10), 2);
    EXPECT_EQ(v.get_value(20), 2);
    EXPECT_EQ(v.get_value(30), 2);
    EXPECT_EQ(v.get_value(40), 1);
    EXPECT_EQ(v.get_value(50), 0);
    EXPECT_EQ(v.get_value(60), 0);
    v.add_elem(49);
    EXPECT_EQ(v.get_below(), 1);
    EXPECT_EQ(v.get_above(), 0);
    EXPECT_EQ(v.get_value(0), 1);
    EXPECT_EQ(v.get_value(10), 2);
    EXPECT_EQ(v.get_value(20), 2);
    EXPECT_EQ(v.get_value(30), 2);
    EXPECT_EQ(v.get_value(40), 2);
    EXPECT_EQ(v.get_value(50), 0);
    EXPECT_EQ(v.get_value(60), 0);
    v.add_elem(50);
    EXPECT_EQ(v.get_below(), 1);
    EXPECT_EQ(v.get_above(), 0);
    EXPECT_EQ(v.get_value(0), 1);
    EXPECT_EQ(v.get_value(10), 2);
    EXPECT_EQ(v.get_value(20), 2);
    EXPECT_EQ(v.get_value(30), 2);
    EXPECT_EQ(v.get_value(40), 2);
    EXPECT_EQ(v.get_value(50), 1);
    EXPECT_EQ(v.get_value(60), 0);
    v.add_elem(59);
    EXPECT_EQ(v.get_below(), 1);
    EXPECT_EQ(v.get_above(), 0);
    EXPECT_EQ(v.get_value(0), 1);
    EXPECT_EQ(v.get_value(10), 2);
    EXPECT_EQ(v.get_value(20), 2);
    EXPECT_EQ(v.get_value(30), 2);
    EXPECT_EQ(v.get_value(40), 2);
    EXPECT_EQ(v.get_value(50), 2);
    EXPECT_EQ(v.get_value(60), 0);
    v.add_elem(60);
    EXPECT_EQ(v.get_below(), 1);
    EXPECT_EQ(v.get_above(), 1);
    EXPECT_EQ(v.get_value(0), 1);
    EXPECT_EQ(v.get_value(10), 2);
    EXPECT_EQ(v.get_value(20), 2);
    EXPECT_EQ(v.get_value(30), 2);
    EXPECT_EQ(v.get_value(40), 2);
    EXPECT_EQ(v.get_value(50), 2);
    EXPECT_EQ(v.get_value(60), 1);
    // Copy vector
    nsl_vec_stats v2 = v;
    EXPECT_EQ(v2.get_start(), 10);
    EXPECT_EQ(v2.get_end(), 60);
    EXPECT_EQ(v2.get_step(), 10);
    EXPECT_EQ(v2.get_size(), 5);
    EXPECT_EQ(v2.get_below(), 1);
    EXPECT_EQ(v2.get_above(), 1);
    EXPECT_EQ(v2.get_value(0), 1);
    EXPECT_EQ(v2.get_value(10), 2);
    EXPECT_EQ(v2.get_value(20), 2);
    EXPECT_EQ(v2.get_value(30), 2);
    EXPECT_EQ(v2.get_value(40), 2);
    EXPECT_EQ(v2.get_value(50), 2);
    EXPECT_EQ(v2.get_value(60), 1);
}
